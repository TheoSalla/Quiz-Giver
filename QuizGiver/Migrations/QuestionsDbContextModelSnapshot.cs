// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizGiver;

#nullable disable

namespace QuizGiver.Migrations
{
    [DbContext(typeof(QuestionsDbContext))]
    partial class QuestionsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QuizGiver.Data.IncorrectAnswer", b =>
                {
                    b.Property<Guid>("IncorrectAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IncorrectAnswerId");

                    b.ToTable("IncorrectAnswers", (string)null);

                    b.HasData(
                        new
                        {
                            IncorrectAnswerId = new Guid("60de8c27-dea1-4771-a6f5-52e56c93e522"),
                            Answer = "Charles Babbage",
                            QuestionId = new Guid("8fe0f29d-b584-4377-8789-9c6949c2db3a")
                        },
                        new
                        {
                            IncorrectAnswerId = new Guid("88ad9503-0e69-4da6-9dce-0aebe28f67bc"),
                            Answer = "Isaac Newton",
                            QuestionId = new Guid("8fe0f29d-b584-4377-8789-9c6949c2db3a")
                        },
                        new
                        {
                            IncorrectAnswerId = new Guid("be745508-bd8e-46ea-baff-f47f2777b106"),
                            Answer = "J.J Thomson",
                            QuestionId = new Guid("8fe0f29d-b584-4377-8789-9c6949c2db3a")
                        },
                        new
                        {
                            IncorrectAnswerId = new Guid("998d95b5-d7e7-4958-ad22-a6dbfaf623fe"),
                            Answer = "Beater",
                            QuestionId = new Guid("89ba9b17-c858-4949-870e-537dddb7e2da")
                        },
                        new
                        {
                            IncorrectAnswerId = new Guid("6e6ec212-fc01-4012-a481-35b2cea36548"),
                            Answer = "Chaser",
                            QuestionId = new Guid("89ba9b17-c858-4949-870e-537dddb7e2da")
                        },
                        new
                        {
                            IncorrectAnswerId = new Guid("d51b834b-99c0-4c4f-83ab-0185e65d1739"),
                            Answer = "Keeper",
                            QuestionId = new Guid("89ba9b17-c858-4949-870e-537dddb7e2da")
                        });
                });

            modelBuilder.Entity("QuizGiver.QuestionInfo", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.ToTable("Questions", (string)null);

                    b.HasData(
                        new
                        {
                            QuestionId = new Guid("8fe0f29d-b584-4377-8789-9c6949c2db3a"),
                            Category = "History",
                            CorrectAnswer = "Jethro Tull",
                            Difficulty = "medium",
                            Question = "The seed drill was invented by which British inventor?",
                            Type = "multiple"
                        },
                        new
                        {
                            QuestionId = new Guid("89ba9b17-c858-4949-870e-537dddb7e2da"),
                            Category = "Entertainment: Books",
                            CorrectAnswer = "Seeker",
                            Difficulty = "medium",
                            Question = "What position does Harry Potter play in Quidditch?",
                            Type = "multiple"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
